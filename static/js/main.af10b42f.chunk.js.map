{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","Header","title","onAdd","showAdd","defaultProps","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af10b42f.chunk.js","sourcesContent":["const Button = ({color, text, onClick}) => {\n    return (\n        <button onClick ={onClick} style ={{ backgroundColor: color }} className='btn'>{text}</button>\n    )\n}\n\nexport default Button\n","import Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button color={showAdd ? 'red' : 'green'} onClick={onAdd} text={showAdd ? 'Close' : 'Add'}/>\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({task, onDelete, onToggle}) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>{task.text} <FaTimes style = {{color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id)} /></h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n    return (\n        <>\n            {tasks.map((task) => (\n            <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\n            ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import {useState} from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!text){\n            alert('please add task');\n            return;\n        }\n\n        onAdd({text, day, reminder})\n        setText('')\n        setDay('')\n        setReminder(false)\n    \n    }\n\n    return (\n        <form className ='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placeholder='Add Task' value ={text} onChange={(e) => setText(e.target.value)} />\n            </div>\n            <div className='form-control'>\n                <label>Day & Time</label>\n                <input type='text' placeholder='Add daytime' value ={day} onChange={(e) => setDay(e.target.value)} />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set reminder</label>\n                <input type='checkbox' checked={reminder} value ={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\n            </div>\n\n            <input type='submit' value='save task' className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddTask\n","import {useState} from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n const App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'ajhdjashdjhabdjads',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'ksajnkankjcs',\n        day: 'Feb 6th at 7:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'sbhbhjac',\n        day: 'Feb 7th at 8:30pm',\n        reminder: false,\n    },\n]);\n\nconst addTask = (task) => {\n  const id = Math.floor((Math.random() * 10000) + 1);\n  const newTask = { id, ...task };\n  setTasks([...tasks, newTask]);\n}\n\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder}: task))\n\n}\n\n   return (\n     <div className=\"container\">\n       <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd = {showAddTask} />\n       {showAddTask && <AddTask onAdd ={addTask} />}\n       {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : 'No Tasks'}\n     </div>\n   );\n }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}